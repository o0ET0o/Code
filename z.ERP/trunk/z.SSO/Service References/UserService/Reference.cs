//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace z.SSO.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/z.SSO.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.ISSOService")]
    public interface ISSOService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSOService/GetUserById", ReplyAction="http://tempuri.org/ISSOService/GetUserByIdResponse")]
        z.SSO.UserService.User GetUserById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSOService/GetUserById", ReplyAction="http://tempuri.org/ISSOService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<z.SSO.UserService.User> GetUserByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSOService/GetUserByCode", ReplyAction="http://tempuri.org/ISSOService/GetUserByCodeResponse")]
        z.SSO.UserService.User GetUserByCode(string code, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSOService/GetUserByCode", ReplyAction="http://tempuri.org/ISSOService/GetUserByCodeResponse")]
        System.Threading.Tasks.Task<z.SSO.UserService.User> GetUserByCodeAsync(string code, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSOService/GetPermissionByUserId", ReplyAction="http://tempuri.org/ISSOService/GetPermissionByUserIdResponse")]
        string[] GetPermissionByUserId(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISSOService/GetPermissionByUserId", ReplyAction="http://tempuri.org/ISSOService/GetPermissionByUserIdResponse")]
        System.Threading.Tasks.Task<string[]> GetPermissionByUserIdAsync(string userid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISSOServiceChannel : z.SSO.UserService.ISSOService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SSOServiceClient : System.ServiceModel.ClientBase<z.SSO.UserService.ISSOService>, z.SSO.UserService.ISSOService {
        
        public SSOServiceClient() {
        }
        
        public SSOServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SSOServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SSOServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SSOServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public z.SSO.UserService.User GetUserById(string id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<z.SSO.UserService.User> GetUserByIdAsync(string id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public z.SSO.UserService.User GetUserByCode(string code, string password) {
            return base.Channel.GetUserByCode(code, password);
        }
        
        public System.Threading.Tasks.Task<z.SSO.UserService.User> GetUserByCodeAsync(string code, string password) {
            return base.Channel.GetUserByCodeAsync(code, password);
        }
        
        public string[] GetPermissionByUserId(string userid) {
            return base.Channel.GetPermissionByUserId(userid);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPermissionByUserIdAsync(string userid) {
            return base.Channel.GetPermissionByUserIdAsync(userid);
        }
    }
}
